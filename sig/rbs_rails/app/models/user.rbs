class User < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[User, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def name: () -> String?

    def name=: (String?) -> String?

    def name?: () -> bool

    def name_changed?: () -> bool

    def name_change: () -> [ String?, String? ]

    def name_will_change!: () -> void

    def name_was: () -> String?

    def name_previously_changed?: () -> bool

    def name_previous_change: () -> Array[String?]?

    def name_previously_was: () -> String?

    def name_before_last_save: () -> String?

    def name_change_to_be_saved: () -> Array[String?]?

    def name_in_database: () -> String?

    def saved_change_to_name: () -> Array[String?]?

    def saved_change_to_name?: () -> bool

    def will_save_change_to_name?: () -> bool

    def restore_name!: () -> void

    def clear_name_change: () -> void

    def balance: () -> Float?

    def balance=: (Float?) -> Float?

    def balance?: () -> bool

    def balance_changed?: () -> bool

    def balance_change: () -> [ Float?, Float? ]

    def balance_will_change!: () -> void

    def balance_was: () -> Float?

    def balance_previously_changed?: () -> bool

    def balance_previous_change: () -> Array[Float?]?

    def balance_previously_was: () -> Float?

    def balance_before_last_save: () -> Float?

    def balance_change_to_be_saved: () -> Array[Float?]?

    def balance_in_database: () -> Float?

    def saved_change_to_balance: () -> Array[Float?]?

    def saved_change_to_balance?: () -> bool

    def will_save_change_to_balance?: () -> bool

    def restore_balance!: () -> void

    def clear_balance_change: () -> void

    def cpf: () -> Integer?

    def cpf=: (Integer?) -> Integer?

    def cpf?: () -> bool

    def cpf_changed?: () -> bool

    def cpf_change: () -> [ Integer?, Integer? ]

    def cpf_will_change!: () -> void

    def cpf_was: () -> Integer?

    def cpf_previously_changed?: () -> bool

    def cpf_previous_change: () -> Array[Integer?]?

    def cpf_previously_was: () -> Integer?

    def cpf_before_last_save: () -> Integer?

    def cpf_change_to_be_saved: () -> Array[Integer?]?

    def cpf_in_database: () -> Integer?

    def saved_change_to_cpf: () -> Array[Integer?]?

    def saved_change_to_cpf?: () -> bool

    def will_save_change_to_cpf?: () -> bool

    def restore_cpf!: () -> void

    def clear_cpf_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def sent_transactions: () -> Transfer::ActiveRecord_Associations_CollectionProxy
  def sent_transactions=: (Transfer::ActiveRecord_Associations_CollectionProxy | Array[Transfer]) -> (Transfer::ActiveRecord_Associations_CollectionProxy | Array[Transfer])
  def sent_transaction_ids: () -> Array[Integer]
  def sent_transaction_ids=: (Array[Integer]) -> Array[Integer]
  def received_transactions: () -> Transfer::ActiveRecord_Associations_CollectionProxy
  def received_transactions=: (Transfer::ActiveRecord_Associations_CollectionProxy | Array[Transfer]) -> (Transfer::ActiveRecord_Associations_CollectionProxy | Array[Transfer])
  def received_transaction_ids: () -> Array[Integer]
  def received_transaction_ids=: (Array[Integer]) -> Array[Integer]

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
    include Enumerable[User]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[User, Integer]
  end
end
